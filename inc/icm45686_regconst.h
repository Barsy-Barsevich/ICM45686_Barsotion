#pragma once

typedef enum ACCEL_MODE
{
    ACCEL_MODE_OF = 0,
    ACCEL_MODE_OFF_2,
    ACCEL_MODE_LP,
    ACCEL_MODE_LN,
};

typedef enum GYRO_MODE
{
    GYRO_MODE_OFF = 0,
    GYRO_MODE_OFF_2,
    GYRO_MODE_LP,
    GYRO_MODE_LN,
};

typedef enum INT_POLARITY
{
    INT_POLARITY_ACTIVE_LOW = 0,
    INT_POLARITY_ACTIVE_HIGH,
};

typedef enum INT_MODE
{
    INT_MODE_PULSE = 0,
    INT_MODE_LATCH,
};

typedef enum INT_DRIVE
{
    INT_DRIVE_PUSH_PULL = 0,
    INT_DRIVE_OPEN_DRAIN,
};

typedef enum ACCEL_UI_FS_SEL
{
    ACCEL_SCALE_32G = 0,
    ACCEL_SCALE_16G,
    ACCEL_SCALE_8G,
    ACCEL_SCALE_4G,
    ACCEL_SCALE_2G,
    ACCEL_SCALE_RES1,
    ACCEL_SCALE_RES2,
    ACCEL_SCALE_RES3,
};

typedef enum ACCEL_ODR
{
    ACCEL_ODR_RES1 = 0,
    ACCEL_ODR_RES2,
    ACCEL_ODR_RES3,
    ACCEL_ODR_6400HZ,
    ACCEL_ODR_3200HZ,
    ACCEL_ODR_1600HZ,
    ACCEL_ODR_800HZ,
    ACCEL_ODR_400HZ,
    ACCEL_ODR_200HZ,
    ACCEL_ODR_100HZ,
    ACCEL_ODR_50HZ,
    ACCEL_ODR_25HZ,
    ACCEL_ODR_12P5HZ,
    ACCEL_ODR_6P25HZ,
    ACCEL_ODR_3P125HZ,
    ACCEL_ODR_1P5625HZ,
};

typedef enum GYRO_UI_FS_SEL
{
    GYRO_SCALE_4000DPS = 0,
    GYRO_SCALE_2000DPS,
    GYRO_SCALE_1000DPS,
    GYRO_SCALE_500DPS,
    GYRO_SCALE_250DPS,
    GYRO_SCALE_125DPS,
    GYRO_SCALE_62P5DPS,
    GYRO_SCALE_31P25DPS,
    GYRO_SCALE_15P625DPS,
    GYRO_SCALE_RES1,
    GYRO_SCALE_RES2,
    GYRO_SCALE_RES3,
    GYRO_SCALE_RES4,
    GYRO_SCALE_RES5,
    GYRO_SCALE_RES6,
    GYRO_SCALE_RES7,
};

typedef enum GYRO_ODR
{
    GYRO_ODR_RES1 = 0,
    GYRO_ODR_RES2,
    GYRO_ODR_RES3,
    GYRO_ODR_6400HZ,
    GYRO_ODR_3200HZ,
    GYRO_ODR_1600HZ,
    GYRO_ODR_800HZ,
    GYRO_ODR_400HZ,
    GYRO_ODR_200HZ,
    GYRO_ODR_100HZ,
    GYRO_ODR_50HZ,
    GYRO_ODR_25HZ,
    GYRO_ODR_12P5HZ,
    GYRO_ODR_6P25HZ,
    GYRO_ODR_3P125HZ,
    GYRO_ODR_1P5625HZ,
};

typedef enum FIFO_MODE
{
    FIFO_MODE_BYPASS = 0,
    FIFO_MODE_STREAM,
    FIFO_MODE_STOP_ON_FULL,
    FIFO_MODE_RESERVED,
};

typedef enum FIFO_DEPTH
{
    FIFO_DEPTH_2K = 0b000111,
    FIFO_DEPTH_8K = 0b011111,
};

typedef enum FIFO_WR_WM_GT_TH
{
    FIFO_WM_INT_IF_EQUAL = 0,
    FIFO_WM_INT_IF_GREATER_OR_EQUAL = 1,
};

typedef enum FIFO_ES0_6B_9B
{
    EXTERNAL_SENSOR0_6_BYTES = 0,
    EXTERNAL_SENSOR0_9_BYTES = 1,
};

typedef enum FIFO_COMP_NC_FLOW_CFG
{
    NON_COMPRESSED_PACKET_FLOW_DIS = 0,
    NON_COMPRESSED_PACKET_EVERY_8_FRAMES,
    NON_COMPRESSED_PACKET_EVERY_16_FRAMES,
    NON_COMPRESSED_PACKET_EVERY_32_FRAMES,
    NON_COMPRESSED_PACKET_EVERY_64_FRAMES,
    NON_COMPRESSED_PACKET_EVERY_128_FRAMES,
    NON_COMPRESSED_PACKET_RES1,
    NON_COMPRESSED_PACKET_RES2,
};

typedef enum WOM_INT_DUR
{
    WOM_INT_DUR_FIRST_OVER_THS_EVNT = 0,
    WOM_INT_DUR_SECOND_OVER_THS_EVNT,
    WOM_INT_DUR_THIRD_OVER_THS_EVNT,
    WOM_INT_DUR_FOURTH_OVER_THS_EVNT,
};

typedef enum WOM_MODE
{
    WOM_MODE_INITIAL_SAMPLE_IS_STORED = 0,
    WOM_MODE_COMPARE_CUR_TO_PREV,
};

typedef enum TMST_RESOL
{
    TMST_RESOL_1US = 0,
    TMST_RESOL_16US,
};

typedef enum AP_FSYNC_SEL
{
    APUI_FSYNC_TAG_DISABLED = 0,
    APUI_FSYNC_TAG_TO_TEMP_DATA_UI_LSB,
    APUI_FSYNC_TAG_TO_GYRO_DATA_X_UI_LSB,
    APUI_FSYNC_TAG_TO_GYRO_DATA_Y_UI_LSB,
    APUI_FSYNC_TAG_TO_GYRO_DATA_Z_UI_LSB,
    APUI_FSYNC_TAG_TO_ACCEL_DATA_X_UI_LSB,
    APUI_FSYNC_TAG_TO_ACCEL_DATA_Y_UI_LSB,
    APUI_FSYNC_TAG_TO_ACCEL_DATA_Z_UI_LSB,
};

typedef enum AP_FSYNC_FLAG_CLEAR_SEL
{
    APUI_FSYNC_CLEAR_ON_REGISTER_UPDATE = 0,
    APUI_FSYNC_CLEAR_ON_REGISTER_READ,
};

typedef enum AUX1_FSYNC_SEL
{
    AUX1_FSYNC_TAG_DISABLED = 0,
    AUX1_FSYNC_TAG_TO_TEMP_DATA_AUX1_LSB,
    AUX1_FSYNC_TAG_TO_GYRO_DATA_X_AUX1_LSB,
    AUX1_FSYNC_TAG_TO_GYRO_DATA_Y_AUX1_LSB,
    AUX1_FSYNC_TAG_TO_GYRO_DATA_Z_AUX1_LSB,
    AUX1_SYNC_TAG_TO_ACCEL_DATA_X_AUX1_LSB,
    AUX1_FSYNC_TAG_TO_ACCEL_DATA_Y_AUX1_LSB,
    AUX1_FSYNC_TAG_TO_ACCEL_DATA_Z_AUX1_LSB,
};

typedef enum AUX1_FSYNC_FLAG_CLEAR_SEL
{
    AUX1_FSYNC_CLEAR_ON_REGISTER_UPDATE = 0,
    AUX1_FSYNC_CLEAR_ON_REGISTER_READ,
};

typedef enum APEX_ODR
{
    APEX_ODR_25HZ = 0,
    APEX_ODR_50HZ,
    APEX_ODR_100HZ,
    APEX_ODR_200HZ,
    APEX_ODR_400HZ,
    APEX_ODR_800HZ,
    APEX_ODR_RES1,
    APEX_ODR_RES2,
};

typedef enum I2CM_EXT_ODR
{
    I2CM_EXT_ODR_3P125HZ = 0,
    I2CM_EXT_ODR_6P25HZ,
    I2CM_EXT_ODR_12P5HZ,
    I2CM_EXT_ODR_25HZ,
    I2CM_EXT_ODR_50HZ,
    I2CM_EXT_ODR_100HZ,
    I2CM_EXT_ODR_200HZ,
    I2CM_EXT_ODR_400HZ,
};

typedef enum ACCEL_FIFO_ODR_DEC
{
    ACCEL_FIFO_ODR_DEC_1 = 0,
    ACCEL_FIFO_ODR_DEC_2,
    ACCEL_FIFO_ODR_DEC_4,
    ACCEL_FIFO_ODR_DEC_8,
    ACCEL_FIFO_ODR_DEC_16,
    ACCEL_FIFO_ODR_DEC_32,
    ACCEL_FIFO_ODR_DEC_64,
    ACCEL_FIFO_ODR_DEC_128,
    ACCEL_FIFO_ODR_DEC_256,
    ACCEL_FIFO_ODR_DEC_512,
    ACCEL_FIFO_ODR_DEC_1024,
    ACCEL_FIFO_ODR_DEC_2048,
    ACCEL_FIFO_ODR_DEC_4096,
    ACCEL_FIFO_ODR_DEC_RES1,
    ACCEL_FIFO_ODR_DEC_RES2,
    ACCEL_FIFO_ODR_DEC_RES3,
};

typedef enum GYRO_FIFO_ODR_DEC
{
    GYRO_FIFO_ODR_DEC_1 = 0,
    GYRO_FIFO_ODR_DEC_2,
    GYRO_FIFO_ODR_DEC_4,
    GYRO_FIFO_ODR_DEC_8,
    GYRO_FIFO_ODR_DEC_16,
    GYRO_FIFO_ODR_DEC_32,
    GYRO_FIFO_ODR_DEC_64,
    GYRO_FIFO_ODR_DEC_128,
    GYRO_FIFO_ODR_DEC_256,
    GYRO_FIFO_ODR_DEC_512,
    GYRO_FIFO_ODR_DEC_1024,
    GYRO_FIFO_ODR_DEC_2048,
    GYRO_FIFO_ODR_DEC_4096,
    GYRO_FIFO_ODR_DEC_RES1,
    GYRO_FIFO_ODR_DEC_RES2,
    GYRO_FIFO_ODR_DEC_RES3,
};

typedef enum AP_SPI_MODE
{
    AP_SPI_MODE_0_3 = 0,
    AP_SPI_MODE_1_2,
};

typedef enum AP_SPI_34_MODE
{
    AP_SPI_34_MODE_3WIRE = 0,
    AP_SPI_34_MODE_4WIRE,
};

typedef enum AP_SPI_MODE_OVRD_VAL
{
    AP_SPI_MODE_OVRD_VAL_0_3 = 0,
    AP_SPI_MODE_OVRD_VAL_1_2,
};

typedef enum AP_SPI_34_MODE_OVRD_VAL
{
    AP_SPI_34_MODE_OVRD_VAL_3WIRE = 0,
    AP_SPI_34_MODE_OVRD_VAL_4WIRE,
};

typedef enum AUX1_SPI_MODE
{
    AUX1_SPI_MODE_0_3 = 0,
    AUX1_SPI_MODE_1_2,
};

typedef enum AUX1_SPI_34_MODE
{
    AUX1_SPI_34_MODE_3WIRE = 0,
    AUX1_SPI_34_MODE_4WIRE,
};

typedef enum AUX1_MODE
{
    AUX1_MODE_SPI_SLAVE = 0,
    AUX1_MODE_I2C_MASTER,
    AUX1_MODE_I2C_BYPASS,
    AUX1_MODE_RESERVED,
};

typedef enum AUX1_MODE_OVRD_VAL
{
    AUX1_MODE_OVRD_VAL_SPI_SLAVE = 0,
    AUX1_MODE_OVRD_VAL_I2C_MASTER,
    AUX1_MODE_OVRD_VAL_I2C_BYPASS,
    AUX1_MODE_OVRD_VAL_RESERVED,
};

typedef enum PADS_SPI_SLEW
{
    PADS_SPI_SLEW_38NS = 0,
    PADS_SPI_SLEW_14NS,
    PADS_SPI_SLEW_10NS,
    PADS_SPI_SLEW_7NS,
    PADS_SPI_SLEW_5NS,
    PADS_SPI_SLEW_4NS,
    PADS_SPI_SLEW_0P5NS,
    PADS_SPI_SLEW_0P5NS_2,
};

typedef enum PADS_I2C_SLEW
{
    PADS_I2C_SLEW_20NS = 0,
    PADS_I2C_SLEW_RES1,
    PADS_I2C_SLEW_7NS,
    PADS_I2C_SLEW_RES2,
    PADS_I2C_SLEW_RES3,
    PADS_I2C_SLEW_RES4,
    PADS_I2C_SLEW_RES5,
    PADS_I2C_SLEW_RES6,
};